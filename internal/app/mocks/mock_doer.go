// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/app/storage/storage.go

// Package mock_storage is a generated GoMock package.
package mock_storage

import (
	reflect "reflect"

	storage "github.com/GorunovAlx/shortening_long_url/internal/app/storage"
	gomock "github.com/golang/mock/gomock"
)

// MockShortURLRepo is a mock of ShortURLRepo interface.
type MockShortURLRepo struct {
	ctrl     *gomock.Controller
	recorder *MockShortURLRepoMockRecorder
}

// MockShortURLRepoMockRecorder is the mock recorder for MockShortURLRepo.
type MockShortURLRepoMockRecorder struct {
	mock *MockShortURLRepo
}

// NewMockShortURLRepo creates a new mock instance.
func NewMockShortURLRepo(ctrl *gomock.Controller) *MockShortURLRepo {
	mock := &MockShortURLRepo{ctrl: ctrl}
	mock.recorder = &MockShortURLRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShortURLRepo) EXPECT() *MockShortURLRepoMockRecorder {
	return m.recorder
}

// CreateListShortURL mocks base method.
func (m *MockShortURLRepo) CreateListShortURL(links []storage.ShortURLByUser) ([]storage.ShortURLByUser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateListShortURL", links)
	ret0, _ := ret[0].([]storage.ShortURLByUser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateListShortURL indicates an expected call of CreateListShortURL.
func (mr *MockShortURLRepoMockRecorder) CreateListShortURL(links interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateListShortURL", reflect.TypeOf((*MockShortURLRepo)(nil).CreateListShortURL), links)
}

// CreateShortURL mocks base method.
func (m *MockShortURLRepo) CreateShortURL(shortURL *storage.ShortURL) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateShortURL", shortURL)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateShortURL indicates an expected call of CreateShortURL.
func (mr *MockShortURLRepoMockRecorder) CreateShortURL(shortURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateShortURL", reflect.TypeOf((*MockShortURLRepo)(nil).CreateShortURL), shortURL)
}

// GetAllShortURLUser mocks base method.
func (m *MockShortURLRepo) GetAllShortURLUser(id uint32) ([]storage.ShortURLByUser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllShortURLUser", id)
	ret0, _ := ret[0].([]storage.ShortURLByUser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllShortURLUser indicates an expected call of GetAllShortURLUser.
func (mr *MockShortURLRepoMockRecorder) GetAllShortURLUser(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllShortURLUser", reflect.TypeOf((*MockShortURLRepo)(nil).GetAllShortURLUser), id)
}

// GetInitialLink mocks base method.
func (m *MockShortURLRepo) GetInitialLink(shortLink string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInitialLink", shortLink)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInitialLink indicates an expected call of GetInitialLink.
func (mr *MockShortURLRepoMockRecorder) GetInitialLink(shortLink interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInitialLink", reflect.TypeOf((*MockShortURLRepo)(nil).GetInitialLink), shortLink)
}

// PingDB mocks base method.
func (m *MockShortURLRepo) PingDB() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PingDB")
	ret0, _ := ret[0].(error)
	return ret0
}

// PingDB indicates an expected call of PingDB.
func (mr *MockShortURLRepoMockRecorder) PingDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PingDB", reflect.TypeOf((*MockShortURLRepo)(nil).PingDB))
}

// MockStorageOperations is a mock of StorageOperations interface.
type MockStorageOperations struct {
	ctrl     *gomock.Controller
	recorder *MockStorageOperationsMockRecorder
}

// MockStorageOperationsMockRecorder is the mock recorder for MockStorageOperations.
type MockStorageOperationsMockRecorder struct {
	mock *MockStorageOperations
}

// NewMockStorageOperations creates a new mock instance.
func NewMockStorageOperations(ctrl *gomock.Controller) *MockStorageOperations {
	mock := &MockStorageOperations{ctrl: ctrl}
	mock.recorder = &MockStorageOperationsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorageOperations) EXPECT() *MockStorageOperationsMockRecorder {
	return m.recorder
}

// GetAllShortURLByUser mocks base method.
func (m *MockStorageOperations) GetAllShortURLByUser(userID uint32) ([]storage.ShortURLByUser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllShortURLByUser", userID)
	ret0, _ := ret[0].([]storage.ShortURLByUser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllShortURLByUser indicates an expected call of GetAllShortURLByUser.
func (mr *MockStorageOperationsMockRecorder) GetAllShortURLByUser(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllShortURLByUser", reflect.TypeOf((*MockStorageOperations)(nil).GetAllShortURLByUser), userID)
}

// GetInitialLink mocks base method.
func (m *MockStorageOperations) GetInitialLink(shortLink string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInitialLink", shortLink)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInitialLink indicates an expected call of GetInitialLink.
func (mr *MockStorageOperationsMockRecorder) GetInitialLink(shortLink interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInitialLink", reflect.TypeOf((*MockStorageOperations)(nil).GetInitialLink), shortLink)
}

// PingDB mocks base method.
func (m *MockStorageOperations) PingDB() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PingDB")
	ret0, _ := ret[0].(error)
	return ret0
}

// PingDB indicates an expected call of PingDB.
func (mr *MockStorageOperationsMockRecorder) PingDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PingDB", reflect.TypeOf((*MockStorageOperations)(nil).PingDB))
}

// WriteListShortURL mocks base method.
func (m *MockStorageOperations) WriteListShortURL(links []storage.ShortURLByUser) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteListShortURL", links)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteListShortURL indicates an expected call of WriteListShortURL.
func (mr *MockStorageOperationsMockRecorder) WriteListShortURL(links interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteListShortURL", reflect.TypeOf((*MockStorageOperations)(nil).WriteListShortURL), links)
}

// WriteShortURL mocks base method.
func (m *MockStorageOperations) WriteShortURL(shortURL *storage.ShortURL) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteShortURL", shortURL)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteShortURL indicates an expected call of WriteShortURL.
func (mr *MockStorageOperationsMockRecorder) WriteShortURL(shortURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteShortURL", reflect.TypeOf((*MockStorageOperations)(nil).WriteShortURL), shortURL)
}
